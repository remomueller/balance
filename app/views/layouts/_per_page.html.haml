- pagination_size_hash = { "large" => "lg", "small" => "sm" }
- per_page = 20 unless defined?(per_page) && per_page
- object_count = 0 unless defined?(object_count) && object_count
- page = params[:page].blank? ? 1 : params[:page].to_i
- current_page_min = (page - 1) * per_page + 1
- current_page_max = page * per_page

- filtered_params = params.permit!

.per-page.d-none.d-sm-inline-block
  %ul.pagination.float-right{ class: "#{"pagination-#{pagination_size_hash[pagination_size]}" if defined?(pagination_size) && %w(large small).include?(pagination_size)}" }
    - if current_page_min > 1
      %li.page-item= link_to "&laquo;".html_safe, url_for(filtered_params.merge(page: page - 1)), class: "page-link"
    - else
      %li.page-item.disabled
        %span.page-link &laquo;

    %li.page-item
      %span.page-link.nowrap
        %b.link-unstyled
          = number_with_delimiter current_page_min
          to
          = number_with_delimiter [current_page_max, object_count].min
        %span.link-unstyled
          of
          = number_with_delimiter object_count

    - if current_page_max < object_count
      %li.page-item= link_to "&raquo;".html_safe, url_for(filtered_params.merge(page: page + 1)), class: "page-link"
    - else
      %li.page-item.disabled
        %span.page-link &raquo;
